from django.db import models


class Users(models.Model):
    name = models.PositiveIntegerField(unique=True, blank=True, null=True) # –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ pozitivInteger –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å id_name
    nickname = models.CharField('–∏–º–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',max_length=100, blank=True, null=True) # –Ω–∞ charfield –ø–æ–º–µ–Ω—è—Ç—å
    mobile = models.CharField(max_length=11,blank=True, null=True) # –Ω–∞ —Åharfield –ø–æ–º–µ–Ω—è—Ç—å
    address = models.TextField(blank=True, null=True)
    delivery = models.CharField('—Ç–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏', max_length=15, default='üöó –ü—Ä–∏–≤–µ–∑—Ç–∏')
    time_delivery = models.CharField('–≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏',max_length=20,default='–ö–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ')

    def __str__(self):
        return '{}'.format(self.nickname)

    class Meta:
        verbose_name = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'
        verbose_name_plural = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'


class Orders(models.Model):
    data = models.DateTimeField(auto_now_add=True)
    amount_to_pay = models.PositiveIntegerField()
    type_delivery = models.CharField('—Ç–∏–ø –¥–æ—Å—Ç–∞–≤–∫–∏', max_length=15)
    address_delivery = models.CharField(max_length=100)  # null = True –Ω–µ –∑–∞–±—ã—Ç—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å
    time_delivery = models.CharField(max_length=50)
    food = models.TextField()
    users = models.ForeignKey(Users, models.CASCADE, verbose_name='–ø—Ä–æ–¥—É–∫—Ç —é–∑–µ—Ä–∞')


class Basket(models.Model):
    product_id = models.CharField(max_length=250, blank=True, null=True)
    count = models.IntegerField(blank=True, null=True)
    baskUser = models.ForeignKey(Users, models.CASCADE, verbose_name='–ø—Ä–æ–¥—É–∫—Ç —é–∑–µ—Ä–∞', null=True, blank=True)
    name_product = models.CharField(max_length=250, blank=True, null=True)
    photo = models.URLField(blank=True, null=True)
    weight = models.DecimalField('–≤–µ—Å –≤ –≥—Ä.', max_digits=7, decimal_places=0, blank=True, null=True)
    price = models.DecimalField('—Ü–µ–Ω–∞', max_digits=8, decimal_places=0, default=0, blank=True, null=True)

    def __str__(self):
        return self.product_id
    class Meta:
        verbose_name = '–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
        verbose_name_plural = '–ö–æ—Ä–∑–∏–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'

class Arrr(models.Model):
    name = models.CharField(max_length=250)
    unic = models.CharField(max_length=250, unique=True, null=True, blank=True, db_index=True)


    def __str__(self):
        return self.name

    class Meta:
        verbose_name = '–ü–µ—Ä–≤–∞—è –ö–∞—Ç–µ–≥–æ—Ä–∏—è'
        verbose_name_plural = '–ü–µ—Ä–≤–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è'

class Category1(models.Model):
    name = models.CharField(max_length=250)
    lol = models.ForeignKey(Arrr, models.CASCADE, verbose_name='–∫–∞—Ç–µ–≥–æ—Ä–∏—è1', null=True, blank=True)
    unic—Å = models.CharField(max_length=250, unique=True, null=True, blank=True, db_index=True)# –¢—É—Ç –±—É–∫–≤–∞ c —Ä—É—Å—Å–∫–∞—è

    class Meta:
        verbose_name = '–í—Ç–æ—Ä–∞—è –ö–∞—Ç–µ–≥–æ—Ä–∏—è'
        verbose_name_plural = '–í—Ç–æ—Ä–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è'
    def __str__(self):
        return self.name


class Meni(models.Model):
    name = models.CharField(max_length=250)
    unic = models.CharField(max_length=250, null=True, blank=True, db_index=True)
    structure = models.CharField(max_length=250, blank=True, null=True)
    photo = models.URLField(blank=True, null=True)
    weight = models.DecimalField('–≤–µ—Å –≤ –≥—Ä.', max_digits=7, decimal_places=0, blank=True, null=True)
    price = models.DecimalField('—Ü–µ–Ω–∞', max_digits=8, decimal_places=0, default=0, blank=True, null=True)
    lol = models.ForeignKey(Category1, models.CASCADE, verbose_name='–∫–∞—Ç–µ–≥–æ—Ä–∏—è2', null=True, blank=True)

    def __str__(self):
        return self.name

    class Meta:
        verbose_name = '–¢–æ–≤–∞—Ä'
        verbose_name_plural = '–í—Å–µ —Ç–æ–≤–∞—Ä—ã'

